{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport AdminHeader from '../../../components/AdminHeader.vue';\nimport refreshAccessToken from '../../../utils/refreshToken';\nexport default {\n  name: \"AddTheater\",\n  data() {\n    return {\n      movie: {\n        movie_name: '',\n        movie_tag: '',\n        movie_language: '',\n        movie_duration: '',\n        movie_description: ''\n      },\n      movie_poster: null\n    };\n  },\n  components: {\n    'admin-header': AdminHeader\n  },\n  methods: {\n    async addMovie() {\n      if (!this.movie_name || !this.movie_tag || !this.movie_language || !this.movie_duration || !this.movie_description) {\n        alert(\"All fields are required !!\");\n        return;\n      }\n      let formData = new FormData();\n      formData.append('data', JSON.stringify(this.movie));\n      console.log(this.movie.movie_name);\n      if (this.movie_poster) {\n        formData.append('movie_poster', this.movie_poster);\n      }\n      try {\n        let access_token = localStorage.getItem('access_token');\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token;\n        await axios.post(\"http://127.0.0.1:8081/api/movie\", formData);\n        console.log(formData.data);\n        this.$router.push(\"/admin/movie\");\n      } catch (error) {\n        if (error.response && error.response.status === 401) {\n          await refreshAccessToken();\n          await this.addMovie();\n        } else if (error.response && error.response.status === 400 || error.response.status === 422) {\n          this.errors = error.response.data.errors;\n          console.log(error);\n          alert('An error occurred while creating movie');\n        } else if (error.response && error.response.status === 409) {\n          alert(error.response.data.message);\n        }\n      }\n    },\n    onFileSelected(event) {\n      this.selectedFile = event.target.files[0];\n    }\n  }\n};","map":{"version":3,"names":["axios","AdminHeader","refreshAccessToken","name","data","movie","movie_name","movie_tag","movie_language","movie_duration","movie_description","movie_poster","components","methods","addMovie","alert","formData","FormData","append","JSON","stringify","console","log","access_token","localStorage","getItem","defaults","headers","common","post","$router","push","error","response","status","errors","message","onFileSelected","event","selectedFile","target","files"],"sources":["src/views/admin/movies/AddMovie.vue"],"sourcesContent":["<template>\n    <div id=\"outer_div\">\n        <admin-header></admin-header>\n        <div class=\"container text-center\">\n            <div class=\"row\">\n                <div class=\"col-4\">\n\n                </div>\n                <div class=\"col\">\n                    <br><br>\n                    <p>To add new Theater<br> Fill this form</p>\n                    <form>\n                        <div class=\"mb-3\">\n                            <input type=\"text\" class=\"form-control\" v-model=\"movie.movie_name\" required \n                                placeholder=\"Movie Name\">\n                        </div>\n                        <div class=\"mb-3\">\n                            <input type=\"text\" class=\"form-control\" v-model=\"movie.movie_tag\" required \n                                placeholder=\"Movie Tag\">\n                        </div>\n                        <div class=\"mb-3\">\n                            <input type=\"text\" class=\"form-control\" v-model=\"movie.movie_language\" required\n                                placeholder=\"Movie Language\">\n                        </div>\n                        <div class=\"mb-3\">\n                            <input type=\"text\" class=\"form-control\" v-model=\"movie.movie_duration\" required\n                                placeholder=\"Movie Duration\">\n                        </div>\n                        <div class=\"mb-3\">\n                            <input type=\"text\" class=\"form-control\" v-model=\"movie.movie_description\" required\n                                placeholder=\"Movie Description\">\n                        </div>\n                        <div class=\"input-group mb-3\">\n                            <input type=\"file\" class=\"form-control\" id=\"inputGroupFile01\" @change=\"onFileSelected\">\n                        </div>\n                        <button type=\"button\" class=\"btn btn-primary\" @click=\"addMovie()\">Add Theater</button>\n                    </form>\n                </div>\n                <div class=\"col-4\">\n\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n\n\n<script>\nimport axios from 'axios';\nimport AdminHeader from '../../../components/AdminHeader.vue'\nimport refreshAccessToken from '../../../utils/refreshToken';\n\n\nexport default {\n    name: \"AddTheater\",\n    data() {\n        return {\n            movie: {\n                movie_name: '',\n                movie_tag: '',\n                movie_language: '',\n                movie_duration: '',\n                movie_description: '',\n            },\n            movie_poster: null,\n        }\n    },\n    components: {\n        'admin-header': AdminHeader\n    },\n    methods: {\n        async addMovie() {\n            if (!this.movie_name || !this.movie_tag || !this.movie_language || !this.movie_duration || !this.movie_description) {\n                alert(\"All fields are required !!\");\n                return;\n            }\n\n            let formData = new FormData()\n\n            formData.append('data',JSON.stringify(this.movie))\n            console.log(this.movie.movie_name)\n            if (this.movie_poster) {\n                formData.append('movie_poster', this.movie_poster)\n            }\n\n            try {\n                let access_token = localStorage.getItem('access_token')\n\n                axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token\n\n                await axios.post(\"http://127.0.0.1:8081/api/movie\", formData)\n                console.log(formData.data)\n                this.$router.push(\"/admin/movie\");\n            }\n            catch (error) {\n                if (error.response && error.response.status === 401) {\n                    await refreshAccessToken();\n                    await this.addMovie();\n                }\n\n                else if (error.response && error.response.status === 400 || error.response.status === 422) {\n                    this.errors = error.response.data.errors;\n                    console.log(error)\n                    alert('An error occurred while creating movie')\n                }\n\n                else if (error.response && error.response.status === 409) {\n                    alert(error.response.data.message)\n                }\n            }\n\n        },\n        onFileSelected(event) {\n            this.selectedFile = event.target.files[0]\n        }\n    }\n}\n</script>\n\n\n<style scoped></style>"],"mappings":";AAiDA,OAAAA,KAAA;AACA,OAAAC,WAAA;AACA,OAAAC,kBAAA;AAGA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;QACAC,UAAA;QACAC,SAAA;QACAC,cAAA;QACAC,cAAA;QACAC,iBAAA;MACA;MACAC,YAAA;IACA;EACA;EACAC,UAAA;IACA,gBAAAX;EACA;EACAY,OAAA;IACA,MAAAC,SAAA;MACA,UAAAR,UAAA,UAAAC,SAAA,UAAAC,cAAA,UAAAC,cAAA,UAAAC,iBAAA;QACAK,KAAA;QACA;MACA;MAEA,IAAAC,QAAA,OAAAC,QAAA;MAEAD,QAAA,CAAAE,MAAA,SAAAC,IAAA,CAAAC,SAAA,MAAAf,KAAA;MACAgB,OAAA,CAAAC,GAAA,MAAAjB,KAAA,CAAAC,UAAA;MACA,SAAAK,YAAA;QACAK,QAAA,CAAAE,MAAA,sBAAAP,YAAA;MACA;MAEA;QACA,IAAAY,YAAA,GAAAC,YAAA,CAAAC,OAAA;QAEAzB,KAAA,CAAA0B,QAAA,CAAAC,OAAA,CAAAC,MAAA,gCAAAL,YAAA;QAEA,MAAAvB,KAAA,CAAA6B,IAAA,oCAAAb,QAAA;QACAK,OAAA,CAAAC,GAAA,CAAAN,QAAA,CAAAZ,IAAA;QACA,KAAA0B,OAAA,CAAAC,IAAA;MACA,EACA,OAAAC,KAAA;QACA,IAAAA,KAAA,CAAAC,QAAA,IAAAD,KAAA,CAAAC,QAAA,CAAAC,MAAA;UACA,MAAAhC,kBAAA;UACA,WAAAY,QAAA;QACA,OAEA,IAAAkB,KAAA,CAAAC,QAAA,IAAAD,KAAA,CAAAC,QAAA,CAAAC,MAAA,YAAAF,KAAA,CAAAC,QAAA,CAAAC,MAAA;UACA,KAAAC,MAAA,GAAAH,KAAA,CAAAC,QAAA,CAAA7B,IAAA,CAAA+B,MAAA;UACAd,OAAA,CAAAC,GAAA,CAAAU,KAAA;UACAjB,KAAA;QACA,OAEA,IAAAiB,KAAA,CAAAC,QAAA,IAAAD,KAAA,CAAAC,QAAA,CAAAC,MAAA;UACAnB,KAAA,CAAAiB,KAAA,CAAAC,QAAA,CAAA7B,IAAA,CAAAgC,OAAA;QACA;MACA;IAEA;IACAC,eAAAC,KAAA;MACA,KAAAC,YAAA,GAAAD,KAAA,CAAAE,MAAA,CAAAC,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}