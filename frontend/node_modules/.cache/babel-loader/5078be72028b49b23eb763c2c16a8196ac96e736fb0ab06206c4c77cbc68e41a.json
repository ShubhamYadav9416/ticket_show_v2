{"ast":null,"code":"import axios from 'axios';\nimport ConfirmationModal from '@/components/ConfirmationModal.vue';\nimport AdminHeader from '../../../components/AdminHeader';\nimport refreshAccessToken from '../../../utils/refreshToken';\nexport default {\n  data() {\n    return {\n      movies: {},\n      show_table: false,\n      no_table: false,\n      posterUrl: \"\",\n      poster: \"\",\n      showModal: false,\n      movie_id_to_delete: -1\n    };\n  },\n  created() {\n    this.allMovies();\n  },\n  methods: {\n    showConfirmationModal(id) {\n      this.showModal = true;\n      this.movie_id_to_delete = id;\n    },\n    async deleteItem() {\n      try {\n        let access_token = localStorage.getItem('access_token');\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token;\n        await axios.delete(`http://127.0.0.1:8081/api/movie/${this.movie_id_to_delete}`);\n        console.log(\"Movie with id: \" + this.movie_id_to_delete + \" deleted\");\n        await this.allMovies();\n      } catch (error) {\n        console.error(error);\n        alert(\"Error while deleteing movie\");\n      }\n      this.showModal = false; // Close the modal\n      this.movie_id_to_delete = -1;\n    },\n    cancelDelete() {\n      this.showModal = false; // Close the modal\n      this.movie_id_to_delete = -1;\n    },\n    async allMovies() {\n      try {\n        let access_token = localStorage.getItem('access_token');\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token;\n        const moviesResponse = await axios.get('http://127.0.0.1:8081/api/movie');\n        this.movies = moviesResponse.data;\n        if (this.movies.length > 0) {\n          console.log(\"Movie data fletch\");\n          this.show_table = true;\n          for (let movie of this.movies) {\n            this.movies[movie.movie_id - 1].poster_url = `data:image/jpeg;base64,${this.movies[movie.movie_id - 1].poster_url}`;\n          }\n        } else {\n          console.log(\"No movie ceated\");\n          this.no_table = true;\n          this.show_table = false;\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 401) {\n          await refreshAccessToken();\n          await this.allMovies();\n        } else if (error.response) {\n          console.error(error);\n          alert('An error occurred while fetching the movie data.');\n        }\n      }\n    }\n    // async dltMovie(id) {\n    //     try {\n    //         let access_token = localStorage.getItem('access_token')\n\n    //         axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token\n\n    //         await axios.delete(`http://127.0.0.1:8081/api/movie/${id}`)\n    //         console.log(\"Movie with id: \" + id + \" deleted\")\n    //         await this.allMovies()\n    //     }\n    //     catch (error) {\n    //         console.error(error);\n    //         alert(\"Movie running in theater\");\n    //     }\n    // },\n  },\n\n  components: {\n    'admin-header': AdminHeader,\n    ConfirmationModal\n  }\n};","map":{"version":3,"names":["axios","ConfirmationModal","AdminHeader","refreshAccessToken","data","movies","show_table","no_table","posterUrl","poster","showModal","movie_id_to_delete","created","allMovies","methods","showConfirmationModal","id","deleteItem","access_token","localStorage","getItem","defaults","headers","common","delete","console","log","error","alert","cancelDelete","moviesResponse","get","length","movie","movie_id","poster_url","response","status","components"],"sources":["src/views/admin/movies/MovieView.vue"],"sourcesContent":["<template>\n    <div id=\"outer_div\">\n        <admin-header></admin-header>\n        <br><br>\n        <div class=\"container-fluid text-center\">\n            <div class=\"row\">\n                <div class=\"col-2\"></div>\n                <div class=\"col\" v-if=\"no_table\">\n                    <p><i>\"No Movie is created\"</i></p><br><br>\n                </div>\n                <div class=\"col\" v-if=\"show_table\">\n                    <center>\n\n                        <h5>Movies</h5>\n                        <table>\n                            <tr>\n                                <th>Movie Id</th>\n                                <th>Movie Name</th>\n                                <th>Movie Tag</th>\n                                <th>Movie Language</th>\n                                <th>Movie Duration</th>\n                                <th>Movie Description</th>\n                                <th>Movie Poster</th>\n                                <th>Actions</th>\n                            </tr>\n                            <tr v-for=\"movie in movies\" :key=\"movie.movie_id\">\n                                <td>{{ movie.movie_id }}</td>\n                                <td>{{ movie.movie_name }}</td>\n                                <td>{{ movie.movie_tag }}</td>\n                                <td>{{ movie.movie_language }}</td>\n                                <td>{{ movie.movie_duration }}</td>\n                                <td>{{ movie.movie_description.slice(0, 15) }} ...</td>\n                                <td>\n                                    <img :src=movie.poster_url style=\"max-height: 70px; max-width: 35px;\">\n                                </td>\n                                <td><a @click=\"showConfirmationModal(movie.movie_id)\"><i class=\"bi bi-trash-fill\"\n                                            style=\"color: brown;\"></i></a>/\n                                    <router-link :to=\"`/admin/movie/edit/${movie.movie_id}`\"><i class=\"bi bi-pencil-square\"\n                                            style=\"color: grey;\"></i></router-link>\n                                    <div>\n                                        <ConfirmationModal v-if=\"showModal\" message=\"Are you sure you want to delete?\"\n                                            :onConfirm=\"deleteItem\" :onCancel=\"cancelDelete\" />\n                                    </div>\n                                </td>\n                            </tr>\n                        </table>\n                    </center>\n                </div>\n                <div class=\"col-2\"></div>\n            </div>\n        </div><br><br>\n        <div class=\"container-fluid text-center\">\n            <div class=\"row\">\n                <div class=\"col-2\"></div>\n                <div class=\"col\">\n                    <div class=\"container text-center\">\n                        <div class=\"row\">\n                            <div class=\"col\">\n                                <h6>To Add New Movie</h6>\n                                <router-link to=\"/admin/add_movie\"><button>\n                                        <center>+</center>\n                                    </button></router-link>\n                            </div>\n                            <div class=\"col-2\"></div>\n                            <div class=\"col\">\n                                <h6>To Add New Movie in Theater</h6>\n                                <router-link to=\"/admin/LinkTheaterMovie\"><button>+</button></router-link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-2\">\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n\n\n<script>\n\nimport axios from 'axios';\n\nimport ConfirmationModal from '@/components/ConfirmationModal.vue';\nimport AdminHeader from '../../../components/AdminHeader'\n\nimport refreshAccessToken from '../../../utils/refreshToken'\n\nexport default {\n    data() {\n        return {\n            movies: {},\n            show_table: false,\n            no_table: false,\n            posterUrl: \"\",\n            poster: \"\",\n            showModal: false,\n            movie_id_to_delete: -1,\n\n        }\n    },\n    created() {\n        this.allMovies()\n    },\n    methods: {\n        showConfirmationModal(id) {\n            this.showModal = true;\n            this.movie_id_to_delete = id;\n        },\n        async deleteItem() {\n            try {\n                let access_token = localStorage.getItem('access_token')\n\n                axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token\n\n                await axios.delete(`http://127.0.0.1:8081/api/movie/${this.movie_id_to_delete}`)\n                console.log(\"Movie with id: \" + this.movie_id_to_delete + \" deleted\")\n                await this.allMovies()\n            }\n            catch (error) {\n                console.error(error);\n                alert(\"Error while deleteing movie\");\n            }\n            this.showModal = false; // Close the modal\n            this.movie_id_to_delete = -1;\n        },\n        cancelDelete() {\n            this.showModal = false; // Close the modal\n            this.movie_id_to_delete = -1;\n        },\n        async allMovies() {\n            try {\n                let access_token = localStorage.getItem('access_token')\n\n                axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token\n\n                const moviesResponse = await axios.get('http://127.0.0.1:8081/api/movie')\n                this.movies = moviesResponse.data\n                if (this.movies.length > 0) {\n                    console.log(\"Movie data fletch\")\n                    this.show_table = true\n                    for (let movie of this.movies) {\n                        this.movies[movie.movie_id - 1].poster_url = `data:image/jpeg;base64,${this.movies[movie.movie_id - 1].poster_url}`\n                    }\n                }\n                else {\n                    console.log(\"No movie ceated\")\n                    this.no_table = true\n                    this.show_table = false\n                }\n            }\n            catch (error) {\n                if (error.response && error.response.status === 401) {\n                    await refreshAccessToken()\n                    await this.allMovies()\n                }\n\n                else if (error.response) {\n                    console.error(error)\n                    alert('An error occurred while fetching the movie data.')\n                }\n            }\n        },\n        // async dltMovie(id) {\n        //     try {\n        //         let access_token = localStorage.getItem('access_token')\n\n        //         axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token\n\n        //         await axios.delete(`http://127.0.0.1:8081/api/movie/${id}`)\n        //         console.log(\"Movie with id: \" + id + \" deleted\")\n        //         await this.allMovies()\n        //     }\n        //     catch (error) {\n        //         console.error(error);\n        //         alert(\"Movie running in theater\");\n        //     }\n        // },\n    },\n    components: {\n        'admin-header': AdminHeader,\n        ConfirmationModal\n    }\n}\n</script>\n\n\n<style scoped>\n.col {\n    /* border: 1px solid black; */\n    margin: 0;\n    padding: 0;\n}\n\nbutton {\n    background-color: rgb(165, 165, 231);\n    border: 0;\n    color: white;\n    width: 50px;\n    height: 50px;\n    font-size: 25px;\n    text-align: center;\n    border-radius: 2rem;\n}\n\nbutton:hover {\n    background-color: rgb(126, 126, 230);\n}\n\ntable {\n    border: 1px solid black;\n    border-collapse: collapse;\n    text-align: center;\n    border-radius: .5em;\n    margin-top: 10px;\n}\n\nth {\n    background-color: rgb(128, 128, 235);\n    color: white;\n}\n\ntd,\nth {\n    padding-left: 12.5px;\n    padding-right: 12.5px;\n    /* border: 1px solid black; */\n    font-size: small;\n}\n\ntd {\n    font-size: 15px;\n}\n\ntr:nth-child(even) {\n    background-color: rgb(207, 231, 243);\n}\n\ntr:nth-child(odd) {\n    background-color: whitesmoke;\n}\n</style>"],"mappings":"AAkFA,OAAAA,KAAA;AAEA,OAAAC,iBAAA;AACA,OAAAC,WAAA;AAEA,OAAAC,kBAAA;AAEA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,UAAA;MACAC,QAAA;MACAC,SAAA;MACAC,MAAA;MACAC,SAAA;MACAC,kBAAA;IAEA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACAC,sBAAAC,EAAA;MACA,KAAAN,SAAA;MACA,KAAAC,kBAAA,GAAAK,EAAA;IACA;IACA,MAAAC,WAAA;MACA;QACA,IAAAC,YAAA,GAAAC,YAAA,CAAAC,OAAA;QAEApB,KAAA,CAAAqB,QAAA,CAAAC,OAAA,CAAAC,MAAA,gCAAAL,YAAA;QAEA,MAAAlB,KAAA,CAAAwB,MAAA,yCAAAb,kBAAA;QACAc,OAAA,CAAAC,GAAA,0BAAAf,kBAAA;QACA,WAAAE,SAAA;MACA,EACA,OAAAc,KAAA;QACAF,OAAA,CAAAE,KAAA,CAAAA,KAAA;QACAC,KAAA;MACA;MACA,KAAAlB,SAAA;MACA,KAAAC,kBAAA;IACA;IACAkB,aAAA;MACA,KAAAnB,SAAA;MACA,KAAAC,kBAAA;IACA;IACA,MAAAE,UAAA;MACA;QACA,IAAAK,YAAA,GAAAC,YAAA,CAAAC,OAAA;QAEApB,KAAA,CAAAqB,QAAA,CAAAC,OAAA,CAAAC,MAAA,gCAAAL,YAAA;QAEA,MAAAY,cAAA,SAAA9B,KAAA,CAAA+B,GAAA;QACA,KAAA1B,MAAA,GAAAyB,cAAA,CAAA1B,IAAA;QACA,SAAAC,MAAA,CAAA2B,MAAA;UACAP,OAAA,CAAAC,GAAA;UACA,KAAApB,UAAA;UACA,SAAA2B,KAAA,SAAA5B,MAAA;YACA,KAAAA,MAAA,CAAA4B,KAAA,CAAAC,QAAA,MAAAC,UAAA,kCAAA9B,MAAA,CAAA4B,KAAA,CAAAC,QAAA,MAAAC,UAAA;UACA;QACA,OACA;UACAV,OAAA,CAAAC,GAAA;UACA,KAAAnB,QAAA;UACA,KAAAD,UAAA;QACA;MACA,EACA,OAAAqB,KAAA;QACA,IAAAA,KAAA,CAAAS,QAAA,IAAAT,KAAA,CAAAS,QAAA,CAAAC,MAAA;UACA,MAAAlC,kBAAA;UACA,WAAAU,SAAA;QACA,OAEA,IAAAc,KAAA,CAAAS,QAAA;UACAX,OAAA,CAAAE,KAAA,CAAAA,KAAA;UACAC,KAAA;QACA;MACA;IACA;IACA;IACA;IACA;;IAEA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA;;EACAU,UAAA;IACA,gBAAApC,WAAA;IACAD;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}