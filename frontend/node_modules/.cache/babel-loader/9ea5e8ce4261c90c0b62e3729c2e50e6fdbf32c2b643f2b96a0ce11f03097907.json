{"ast":null,"code":"import axios from 'axios';\nimport refreshAccessToken from '../../../utils/refreshToken';\nimport AdminHeader from '../../../components/AdminHeader';\nexport default {\n  name: 'EditMovie',\n  data() {\n    return {\n      movie_id: this.$route.params.id,\n      movie: {}\n    };\n  },\n  created() {\n    this.fetchMovie();\n  },\n  methods: {\n    async fetchMovie() {\n      try {\n        let access_token = localStorage.getItem('access_token');\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token;\n        const movieResponse = await axios.get(`http://127.0.0.1:8081/api/movie/${this.movie_id}`);\n        this.movie = movieResponse.data;\n      } catch (error) {\n        if (error.response && error.response.status === 401) {\n          await refreshAccessToken();\n          await this.allMovies();\n        } else if (error.response) {\n          console.error(error);\n          alert('An error occurred while fetching the movie data.');\n        }\n      }\n    }\n  },\n  components: {\n    'admin-header': AdminHeader\n  }\n};","map":{"version":3,"names":["axios","refreshAccessToken","AdminHeader","name","data","movie_id","$route","params","id","movie","created","fetchMovie","methods","access_token","localStorage","getItem","defaults","headers","common","movieResponse","get","error","response","status","allMovies","console","alert","components"],"sources":["src/views/admin/movies/EditMovie.vue"],"sourcesContent":["<template>\n<div id=\"outer_div\">\n        <admin-header></admin-header>\n        <div class=\"container text-center\">\n          <div class=\"row\">\n                <div class=\"col-4\">\n\n                </div>\n                <div class=\"col\">\n                    <br><br>\n                    <p>To add new Theater<br> Fill this form</p>\n                    <form>\n                        <div class=\"mb-3\">\n                            <input type=\"text\" class=\"form-control\" v-model=\"movie_name\" required\n                      placeholder=\"Movie Name\" :value=movie.movie_name>\n                        </div>\n                        <div class=\"mb-3\">\n                            <input type=\"text\" class=\"form-control\" v-model=\"movie_tag\" required\n                                placeholder=\"Movie Tag\" :value=\"movie.movie_tag\">\n                        </div>\n                        <div class=\"mb-3\">\n                            <input type=\"text\" class=\"form-control\" v-model=\"movie_language\" required\n                                placeholder=\"Movie Language\" >\n                        </div>\n                        <div class=\"mb-3\">\n                            <input type=\"text\" class=\"form-control\" v-model=\"movie_duration\" required\n                                placeholder=\"Movie Duration\">\n                        </div>\n                        <div class=\"mb-3\">\n                            <input type=\"text\" class=\"form-control\" v-model=\"movie_description\" required\n                                placeholder=\"Movie Description\">\n                        </div>\n                        <div class=\"input-group mb-3\">\n                            <input type=\"file\" class=\"form-control\" id=\"inputGroupFile01\">\n                        </div>\n                        <button type=\"button\" class=\"btn btn-primary\" @click=\"addMovie()\">Add Theater</button>\n                    </form>\n                </div>\n                <div class=\"col-4\">\n\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport refreshAccessToken from '../../../utils/refreshToken';\n\nimport AdminHeader from '../../../components/AdminHeader'\n\n\nexport default {\n    name: 'EditMovie',\n    data(){\n        return {\n            movie_id : this.$route.params.id,\n            movie: {},\n        }\n    },\n    created(){\n        this.fetchMovie()\n    },\n    methods: {\n        async fetchMovie(){\n            try{\n                let access_token = localStorage.getItem('access_token')\n\n                axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token\n\n                const movieResponse = await axios.get(`http://127.0.0.1:8081/api/movie/${this.movie_id}`)\n                this.movie = movieResponse.data\n            }\n            catch (error) {\n                if (error.response && error.response.status === 401) {\n                    await refreshAccessToken()\n                    await this.allMovies()\n                }\n\n                else if (error.response) {\n                    console.error(error)\n                    alert('An error occurred while fetching the movie data.')\n                }\n            }\n        }\n    },\n    components: {\n        'admin-header': AdminHeader\n    }\n}\n\n</script>"],"mappings":"AA+CA,OAAAA,KAAA;AACA,OAAAC,kBAAA;AAEA,OAAAC,WAAA;AAGA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA,OAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,UAAA;EACA;EACAC,OAAA;IACA,MAAAD,WAAA;MACA;QACA,IAAAE,YAAA,GAAAC,YAAA,CAAAC,OAAA;QAEAf,KAAA,CAAAgB,QAAA,CAAAC,OAAA,CAAAC,MAAA,gCAAAL,YAAA;QAEA,MAAAM,aAAA,SAAAnB,KAAA,CAAAoB,GAAA,yCAAAf,QAAA;QACA,KAAAI,KAAA,GAAAU,aAAA,CAAAf,IAAA;MACA,EACA,OAAAiB,KAAA;QACA,IAAAA,KAAA,CAAAC,QAAA,IAAAD,KAAA,CAAAC,QAAA,CAAAC,MAAA;UACA,MAAAtB,kBAAA;UACA,WAAAuB,SAAA;QACA,OAEA,IAAAH,KAAA,CAAAC,QAAA;UACAG,OAAA,CAAAJ,KAAA,CAAAA,KAAA;UACAK,KAAA;QACA;MACA;IACA;EACA;EACAC,UAAA;IACA,gBAAAzB;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}