{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport ConfirmationModal from '@/components/ConfirmationModal.vue';\nimport refreshAccessToken from '../../../utils/refreshToken';\nexport default {\n  name: 'theaterMovieTables',\n  data() {\n    return {\n      alltheatermovies: {},\n      runningBooking: [],\n      stopedBooking: [],\n      running_table: false,\n      stoped_table: false,\n      table: false,\n      showModal: false,\n      to_dlt_theater_movie: -1\n    };\n  },\n  created() {\n    this.allTheaterMovies();\n  },\n  components: {\n    ConfirmationModal\n  },\n  methods: {\n    showConfirmationModal(id) {\n      this.showModal = true;\n      this.to_dlt_theater_movie = id;\n    },\n    async deleteItem() {\n      try {\n        let access_token = localStorage.getItem('access_token');\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token;\n        await axios.delete(`http://127.0.0.1:8081/api/dlt/theater_movie/${this.to_dlt_theater_movie}`);\n        console.log(\"TheaterMovie with id: \" + this.to_dlt_theater_movie + \" deleted\");\n        await this.allTheaterMovies();\n      } catch (error) {\n        console.error(error);\n        alert(\"An error occurred while deleting Theatermovie\");\n      }\n      this.showModal = false; // Close the modal\n    },\n\n    cancelDelete() {\n      this.showModal = false; // Close the modal\n    },\n\n    async allTheaterMovies() {\n      try {\n        let access_token = localStorage.getItem('access_token');\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token;\n        const theaterMoviesResponse = await axios.get('http://127.0.0.1:8081/api/theater_movie');\n        this.alltheatermovies = theaterMoviesResponse.data;\n        if (this.alltheatermovies.length > 0) {\n          console.log(\"theaterMovie data fletch\");\n          this.table = true;\n          for (let theatermovie of this.alltheatermovies) {\n            let time = theatermovie.timing;\n            let show_time = new Date(time);\n            let time_now = new Date();\n            if (time_now < show_time) {\n              this.runningBooking.push(theatermovie);\n            } else {\n              this.stopedBooking.push(theatermovie);\n            }\n          }\n          console.log(this.runningBooking);\n          if (this.runningBooking.length > 0) {\n            this.running_table = true;\n          }\n          if (this.stopedBooking.length > 0) {\n            this.stoped_table = true;\n          }\n        } else {\n          console.log(\"No theater linked with movies\");\n          this.table = false;\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 401) {\n          await refreshAccessToken();\n          await this.allTheaterMovies();\n        } else if (error.response) {\n          console.error(error);\n          alert('An error occurred while fetching the theater movie data.');\n        }\n      }\n    }\n    // async dltTheaterMovie(id) {\n    //     try {\n    //         let access_token = localStorage.getItem('access_token')\n\n    //         axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token\n\n    //         await axios.delete(`http://127.0.0.1:8081/api/dlt/theater_movie/${id}`)\n    //         console.log(\"TheaterMovie with id: \" + id + \" deleted\")\n    //         await this.allTheaterMovies()\n    //     }\n    //     catch (error) {\n    //         console.error(error);\n    //         alert(\"An error occurred while deleting Theatermovie\");\n    //     }\n    // }\n  }\n};","map":{"version":3,"names":["axios","ConfirmationModal","refreshAccessToken","name","data","alltheatermovies","runningBooking","stopedBooking","running_table","stoped_table","table","showModal","to_dlt_theater_movie","created","allTheaterMovies","components","methods","showConfirmationModal","id","deleteItem","access_token","localStorage","getItem","defaults","headers","common","delete","console","log","error","alert","cancelDelete","theaterMoviesResponse","get","length","theatermovie","time","timing","show_time","Date","time_now","push","response","status"],"sources":["src/views/admin/theater_movie/TheaterMovieView.vue"],"sourcesContent":["<template>\n    <div id=\"outer_div\">\n\n        <br><br>\n        <div class=\"container-fluid text-center\">\n            <div class=\"row\">\n                <div class=\"col-2\"></div>\n                <div class=\"col\" v-if=\"table\">\n                    <div v-if=\"running_table\">\n                        <center>\n\n                            <h5>Movies Booking Running</h5>\n                            <table>\n                                <tr>\n                                    <th>Theater Movie Id</th>\n                                    <th>Theater Name</th>\n                                    <th>Movie Name</th>\n                                    <th>Ticket Price</th>\n                                    <th>Show Date</th>\n                                    <th>Show Timing</th>\n                                    <th>Actions</th>\n                                </tr>\n                                <tr v-for=\"item in runningBooking\" :key=\"item.id\">\n                                    <td>{{ item.theater_movie_id }}</td>\n                                    <td>{{ item.theater_name }}</td>\n                                    <td>{{ item.movie_name }}</td>\n                                    <td>{{ item.ticket_price }}</td>\n                                    <td>{{ ((new Date(item.timing)).toString()).slice(0, 16) }}</td>\n                                    <td>{{ ((new Date(item.timing)).toString()).slice(16, 21) }}</td>\n                                    <td><a @click=\"showConfirmationModal(item.theater_movie_id)\"><i class=\"bi bi-trash-fill\"\n                                                style=\"color: brown;\"></i></a></td>\n                                    <ConfirmationModal v-if=\"showModal\" message=\"Are you sure you want to delete?<br> This will also delete all booking in this Theater of this movie.\"\n                                        :onConfirm=\"deleteItem\" :onCancel=\"cancelDelete\" />\n                                </tr>\n                            </table>\n                        </center>\n                    </div>\n                    <div v-if=\"stoped_table\">\n                        <center>\n\n                            <h5>Movies Booking Stoped</h5>\n                            <table>\n                                <tr>\n                                    <th>Theater Movie Id</th>\n                                    <th>Theater Name</th>\n                                    <th>Movie Name</th>\n                                    <th>Ticket Price</th>\n                                    <th>Show Date</th>\n                                    <th>Show Timing</th>\n                                    <!-- <th>Actions</th> -->\n                                </tr>\n                                <tr v-for=\"item in stopedBooking\" :key=\"item.id\">\n                                    <td>{{ item.theater_movie_id }}</td>\n                                    <td>{{ item.theater_name }}</td>\n                                    <td>{{ item.movie_name }}</td>\n                                    <td>{{ item.ticket_price }}</td>\n                                    <td>{{ ((new Date(item.timing)).toString()).slice(0, 16) }}</td>\n                                    <td>{{ ((new Date(item.timing)).toString()).slice(16, 21) }}</td>\n                                    <!-- <td><a @click=\"showConfirmationModal(item.theater_movie_id)\"><i class=\"bi bi-trash-fill\"\n                                                style=\"color: brown;\"></i></a></td>\n                                    <ConfirmationModal v-if=\"showModal\" message=\"Are you sure you want to delete?\"\n                                        :onConfirm=\"deleteItem\" :onCancel=\"cancelDelete\" /> -->\n                                </tr>\n                            </table>\n                        </center>\n                    </div>\n                </div>\n                <div class=\"col\" v-else>\n                    <p><i>\"No Movie is running in theaters is created\"</i></p>\n                </div>\n                <div class=\"col-2\"></div>\n            </div>\n        </div><br><br>\n        <center>\n            <div>\n                <h6>To Add New Movie in Theater</h6>\n                <router-link to=\"/admin/LinkTheaterMovie\"><button>+</button></router-link>\n            </div>\n        </center>\n    </div>\n</template>\n\n\n\n<script>\n\nimport axios from 'axios';\nimport ConfirmationModal from '@/components/ConfirmationModal.vue';\n\nimport refreshAccessToken from '../../../utils/refreshToken'\n\nexport default {\n    name: 'theaterMovieTables',\n    data() {\n        return {\n            alltheatermovies: {},\n            runningBooking: [],\n            stopedBooking: [],\n            running_table: false,\n            stoped_table: false,\n            table: false,\n            showModal: false,\n            to_dlt_theater_movie: -1,\n        }\n    },\n    created() {\n        this.allTheaterMovies()\n    },\n    components: {\n        ConfirmationModal\n    },\n    methods: {\n        showConfirmationModal(id) {\n            this.showModal = true;\n            this.to_dlt_theater_movie = id;\n        },\n        async deleteItem() {\n            try {\n                let access_token = localStorage.getItem('access_token')\n\n                axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token\n\n                await axios.delete(`http://127.0.0.1:8081/api/dlt/theater_movie/${this.to_dlt_theater_movie}`)\n                console.log(\"TheaterMovie with id: \" + this.to_dlt_theater_movie + \" deleted\")\n                await this.allTheaterMovies()\n            }\n            catch (error) {\n                console.error(error);\n                alert(\"An error occurred while deleting Theatermovie\");\n            }\n            this.showModal = false; // Close the modal\n        },\n        cancelDelete() {\n            this.showModal = false; // Close the modal\n        },\n        async allTheaterMovies() {\n            try {\n                let access_token = localStorage.getItem('access_token')\n\n                axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token\n\n                const theaterMoviesResponse = await axios.get('http://127.0.0.1:8081/api/theater_movie')\n                this.alltheatermovies = theaterMoviesResponse.data\n                if (this.alltheatermovies.length > 0) {\n                    console.log(\"theaterMovie data fletch\")\n                    this.table = true\n                    for (let theatermovie of this.alltheatermovies) {\n                        let time = theatermovie.timing\n                        let show_time = new Date(time)\n                        let time_now = new Date()\n                        if (time_now < show_time) {\n                            this.runningBooking.push(theatermovie)\n                        }\n                        else {\n                            this.stopedBooking.push(theatermovie)\n                        }\n                    }\n                    console.log(this.runningBooking)\n                    if (this.runningBooking.length > 0) {\n                        this.running_table = true\n                    }\n                    if (this.stopedBooking.length > 0) {\n                        this.stoped_table = true\n                    }\n                }\n                else {\n                    console.log(\"No theater linked with movies\")\n                    this.table = false\n                }\n            }\n            catch (error) {\n                if (error.response && error.response.status === 401) {\n                    await refreshAccessToken()\n                    await this.allTheaterMovies()\n                }\n\n                else if (error.response) {\n                    console.error(error)\n                    alert('An error occurred while fetching the theater movie data.')\n                }\n            }\n        },\n        // async dltTheaterMovie(id) {\n        //     try {\n        //         let access_token = localStorage.getItem('access_token')\n\n        //         axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token\n\n        //         await axios.delete(`http://127.0.0.1:8081/api/dlt/theater_movie/${id}`)\n        //         console.log(\"TheaterMovie with id: \" + id + \" deleted\")\n        //         await this.allTheaterMovies()\n        //     }\n        //     catch (error) {\n        //         console.error(error);\n        //         alert(\"An error occurred while deleting Theatermovie\");\n        //     }\n        // }\n    },\n}\n</script>\n\n\n<style scoped>\n.col {\n    /* border: 1px solid black; */\n    margin: 0;\n    padding: 0;\n}\n\nbutton {\n    background-color: rgb(165, 165, 231);\n    border: 0;\n    color: white;\n    width: 50px;\n    height: 50px;\n    font-size: 25px;\n    text-align: center;\n    border-radius: 2rem;\n}\n\nbutton:hover {\n    background-color: rgb(126, 126, 230);\n}\n\ntable {\n    border: 1px solid black;\n    border-collapse: collapse;\n    text-align: center;\n    border-radius: .5em;\n    margin-top: 10px;\n}\n\nth {\n    background-color: rgb(128, 128, 235);\n    color: white;\n}\n\ntd,\nth {\n    padding-left: 12.5px;\n    padding-right: 12.5px;\n    /* border: 1px solid black; */\n    font-size: small;\n}\n\ntd {\n    font-size: 15px;\n}\n\ntr:nth-child(even) {\n    background-color: rgb(207, 231, 243);\n}\n\ntr:nth-child(odd) {\n    background-color: whitesmoke;\n}\n</style>"],"mappings":";AAsFA,OAAAA,KAAA;AACA,OAAAC,iBAAA;AAEA,OAAAC,kBAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,gBAAA;MACAC,cAAA;MACAC,aAAA;MACAC,aAAA;MACAC,YAAA;MACAC,KAAA;MACAC,SAAA;MACAC,oBAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,gBAAA;EACA;EACAC,UAAA;IACAd;EACA;EACAe,OAAA;IACAC,sBAAAC,EAAA;MACA,KAAAP,SAAA;MACA,KAAAC,oBAAA,GAAAM,EAAA;IACA;IACA,MAAAC,WAAA;MACA;QACA,IAAAC,YAAA,GAAAC,YAAA,CAAAC,OAAA;QAEAtB,KAAA,CAAAuB,QAAA,CAAAC,OAAA,CAAAC,MAAA,gCAAAL,YAAA;QAEA,MAAApB,KAAA,CAAA0B,MAAA,qDAAAd,oBAAA;QACAe,OAAA,CAAAC,GAAA,iCAAAhB,oBAAA;QACA,WAAAE,gBAAA;MACA,EACA,OAAAe,KAAA;QACAF,OAAA,CAAAE,KAAA,CAAAA,KAAA;QACAC,KAAA;MACA;MACA,KAAAnB,SAAA;IACA;;IACAoB,aAAA;MACA,KAAApB,SAAA;IACA;;IACA,MAAAG,iBAAA;MACA;QACA,IAAAM,YAAA,GAAAC,YAAA,CAAAC,OAAA;QAEAtB,KAAA,CAAAuB,QAAA,CAAAC,OAAA,CAAAC,MAAA,gCAAAL,YAAA;QAEA,MAAAY,qBAAA,SAAAhC,KAAA,CAAAiC,GAAA;QACA,KAAA5B,gBAAA,GAAA2B,qBAAA,CAAA5B,IAAA;QACA,SAAAC,gBAAA,CAAA6B,MAAA;UACAP,OAAA,CAAAC,GAAA;UACA,KAAAlB,KAAA;UACA,SAAAyB,YAAA,SAAA9B,gBAAA;YACA,IAAA+B,IAAA,GAAAD,YAAA,CAAAE,MAAA;YACA,IAAAC,SAAA,OAAAC,IAAA,CAAAH,IAAA;YACA,IAAAI,QAAA,OAAAD,IAAA;YACA,IAAAC,QAAA,GAAAF,SAAA;cACA,KAAAhC,cAAA,CAAAmC,IAAA,CAAAN,YAAA;YACA,OACA;cACA,KAAA5B,aAAA,CAAAkC,IAAA,CAAAN,YAAA;YACA;UACA;UACAR,OAAA,CAAAC,GAAA,MAAAtB,cAAA;UACA,SAAAA,cAAA,CAAA4B,MAAA;YACA,KAAA1B,aAAA;UACA;UACA,SAAAD,aAAA,CAAA2B,MAAA;YACA,KAAAzB,YAAA;UACA;QACA,OACA;UACAkB,OAAA,CAAAC,GAAA;UACA,KAAAlB,KAAA;QACA;MACA,EACA,OAAAmB,KAAA;QACA,IAAAA,KAAA,CAAAa,QAAA,IAAAb,KAAA,CAAAa,QAAA,CAAAC,MAAA;UACA,MAAAzC,kBAAA;UACA,WAAAY,gBAAA;QACA,OAEA,IAAAe,KAAA,CAAAa,QAAA;UACAf,OAAA,CAAAE,KAAA,CAAAA,KAAA;UACAC,KAAA;QACA;MACA;IACA;IACA;IACA;IACA;;IAEA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}