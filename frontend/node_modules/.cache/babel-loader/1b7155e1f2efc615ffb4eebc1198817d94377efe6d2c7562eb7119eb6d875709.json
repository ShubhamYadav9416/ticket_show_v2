{"ast":null,"code":"export default {\n  name: 'userFilters',\n  props: {\n    theater_movies_for_filters: Array\n  },\n  data() {\n    return {\n      filtered_theaters: []\n    };\n  },\n  methods: {\n    async filter_by_rate(value) {\n      console.log(value);\n      for (theater_movie of theater_movies_for_filters) {\n        try {\n          let access_token = localStorage.getItem('access_token');\n          axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token;\n          const theatersRatingResponse = await axios.get(`http://127.0.0.1:8081/api/rating/theater/${this.theater_movie.theater_id}`);\n          if (theatersRatingResponse.data.votes === 0) {\n            this.votes = \"-\";\n            this.theater_cal_rating = \"-\";\n            continue;\n          } else {\n            this.theater_cal_rating = theatersRatingResponse.data.total_rating / theatersRatingResponse.data.votes;\n            this.votes = theatersRatingResponse.data.votes;\n          }\n        } catch (error) {\n          if (error.response && error.response.status === 401) {\n            await refreshAccessToken();\n            await this.theaterRatings();\n          } else if (error.response) {\n            console.error(error);\n            alert('An error occurred while fetching the theater user rating data.');\n          }\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","props","theater_movies_for_filters","Array","data","filtered_theaters","methods","filter_by_rate","value","console","log","theater_movie","access_token","localStorage","getItem","axios","defaults","headers","common","theatersRatingResponse","get","theater_id","votes","theater_cal_rating","total_rating","error","response","status","refreshAccessToken","theaterRatings","alert"],"sources":["src/views/user/home/Filters.vue"],"sourcesContent":["<template>\n    <div class=\"filters\">\n        <h3>Filters</h3>\n        <div class=\"filter_rating\">\n            <dt>Filter by rating</dt>\n            <dd @click=\"filter_by_rate(4)\"><i class=\"bi bi-star-fill\"></i><i class=\"bi bi-star-fill\"></i><i class=\"bi bi-star-fill\"></i><i\n                    class=\"bi bi-star-fill\"></i><i class=\"bi bi-star\"></i>\n            </dd>\n            <dd @click=\"filter_by_rate(4)\"><i class=\"bi bi-star-fill\"></i><i class=\"bi bi-star-fill\"></i><i class=\"bi bi-star-fill\"></i><i\n                    class=\"bi bi-star\"></i><i class=\"bi bi-star\"></i></dd>\n            <dd @click=\"filter_by_rate(4)\"><i class=\"bi bi-star-fill\"></i><i class=\"bi bi-star-fill\"></i><i class=\"bi bi-star\"></i><i\n                    class=\"bi bi-star\"></i><i class=\"bi bi-star\"></i></dd>\n            <dd @click=\"filter_by_rate(4)\"><i class=\"bi bi-star-fill\"></i><i class=\"bi bi-star\"></i><i class=\"bi bi-star\"></i><i\n                    class=\"bi bi-star\"></i><i class=\"bi bi-star\"></i></dd>\n        </div>\n        <div class=\"filter_tags\">\n            <dt>Filter by Tags</dt>\n            <dd>Action</dd>\n            <dd>Romance</dd>\n            {{ theater_movies_for_filters }}\n            {{ theater_movies }}\n        </div>\n    </div>\n</template>\n\n<script>\n\nexport default {\n    name: 'userFilters',\n    props: {\n        theater_movies_for_filters: Array,\n    },\n    data () {\n        return {\n            filtered_theaters : [],\n        }\n    },\n    methods: {\n        async filter_by_rate(value){\n            console.log(value)\n            for (theater_movie of theater_movies_for_filters){\n                try {\n                let access_token = localStorage.getItem('access_token')\n\n                axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token\n                const theatersRatingResponse = await axios.get(`http://127.0.0.1:8081/api/rating/theater/${this.theater_movie.theater_id}`)\n\n                if (theatersRatingResponse.data.votes === 0) {\n                    this.votes = \"-\"\n                    this.theater_cal_rating = \"-\"\n                    continue\n\n                }\n                else {\n                    this.theater_cal_rating = theatersRatingResponse.data.total_rating / theatersRatingResponse.data.votes\n                    this.votes = theatersRatingResponse.data.votes\n                }\n            }\n            catch (error) {\n                if (error.response && error.response.status === 401) {\n                    await refreshAccessToken()\n                    await this.theaterRatings()\n                }\n\n                else if (error.response) {\n                    console.error(error)\n                    alert('An error occurred while fetching the theater user rating data.')\n                }\n            }\n            }\n\n        }\n    }\n}\n\n</script>\n\n<style scoped>\n.filters {\n    margin-top: 150px;\n}\n\n.filters h3 {\n    font-size: 20px;\n}\n\n.filters dt {\n    font-size: 15px;\n    font-weight: 300;\n}\n\n.filters dd {\n    color: rgb(232, 129, 129);\n    margin-bottom: -5px;\n}\n\n.filter_tags {\n    margin-top: 15px;\n}\n\n.filter_tags dd {\n    color: rgb(54, 52, 52);\n    font-weight: 300;\n    font-size: 14px;\n}\n\n.filter_tags dd:hover {\n    color: black;\n    font-size: 16px;\n}\n\n.filter_rating dd:hover {\n    color: red;\n    font-size: 18px;\n}\n</style>"],"mappings":"AA2BA;EACAA,IAAA;EACAC,KAAA;IACAC,0BAAA,EAAAC;EACA;EACAC,KAAA;IACA;MACAC,iBAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,eAAAC,KAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA,KAAAG,aAAA,IAAAT,0BAAA;QACA;UACA,IAAAU,YAAA,GAAAC,YAAA,CAAAC,OAAA;UAEAC,KAAA,CAAAC,QAAA,CAAAC,OAAA,CAAAC,MAAA,gCAAAN,YAAA;UACA,MAAAO,sBAAA,SAAAJ,KAAA,CAAAK,GAAA,kDAAAT,aAAA,CAAAU,UAAA;UAEA,IAAAF,sBAAA,CAAAf,IAAA,CAAAkB,KAAA;YACA,KAAAA,KAAA;YACA,KAAAC,kBAAA;YACA;UAEA,OACA;YACA,KAAAA,kBAAA,GAAAJ,sBAAA,CAAAf,IAAA,CAAAoB,YAAA,GAAAL,sBAAA,CAAAf,IAAA,CAAAkB,KAAA;YACA,KAAAA,KAAA,GAAAH,sBAAA,CAAAf,IAAA,CAAAkB,KAAA;UACA;QACA,EACA,OAAAG,KAAA;UACA,IAAAA,KAAA,CAAAC,QAAA,IAAAD,KAAA,CAAAC,QAAA,CAAAC,MAAA;YACA,MAAAC,kBAAA;YACA,WAAAC,cAAA;UACA,OAEA,IAAAJ,KAAA,CAAAC,QAAA;YACAjB,OAAA,CAAAgB,KAAA,CAAAA,KAAA;YACAK,KAAA;UACA;QACA;MACA;IAEA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}