{"ast":null,"code":"import axios from 'axios';\nimport AdminHeader from '../../../components/AdminHeader';\nimport refreshAccessToken from '../../../utils/refreshToken';\nexport default {\n  data() {\n    return {\n      theaters: {},\n      show_table: false,\n      no_table: false,\n      showModal: false,\n      theater_id_to_delete: -1\n    };\n  },\n  created() {\n    this.allTheaters();\n  },\n  methods: {\n    showConfirmationModal(id) {\n      this.showModal = true;\n      this.movie_id_to_delete = id;\n    },\n    async deleteItem() {\n      try {\n        let access_token = localStorage.getItem('access_token');\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token;\n        await axios.delete(`http://127.0.0.1:8081/api/movie/${this.theater_id_to_delete}`);\n        console.log(\"Movie with id: \" + this.theater_id_to_delete + \" deleted\");\n        await this.allMovies();\n      } catch (error) {\n        console.error(error);\n        alert(\"Error while deleteing movie\");\n      }\n      this.showModal = false; // Close the modal\n      this.theater_id_to_delete = -1;\n    },\n    cancelDelete() {\n      this.showModal = false; // Close the modal\n      this.theater_id_to_delete = -1;\n    },\n    async allTheaters() {\n      try {\n        let access_token = localStorage.getItem('access_token');\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token;\n        const theatersResponse = await axios.get('http://127.0.0.1:8081/api/theater');\n        this.theaters = theatersResponse.data;\n        if (this.theaters.length > 0) {\n          console.log(\"Theater data fetched\");\n          this.no_table = false;\n          this.show_table = true;\n        } else {\n          console.log(\"No theater ceated\");\n          this.no_table = true;\n          this.show_table = false;\n        }\n      } catch (error) {\n        if (error.response && error.response.status === 401) {\n          await refreshAccessToken();\n          await this.alltheaters();\n        } else if (error.response) {\n          console.error(error);\n          alert('An error occurred while fetching the theater data.');\n        }\n      }\n    },\n    async dltTheater(id) {\n      try {\n        let access_token = localStorage.getItem('access_token');\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token;\n        await axios.delete(`http://127.0.0.1:8081/api/theater/${id}`);\n        console.log(\"theater with id: \" + id + \" deleted\");\n        await this.allTheaters();\n      } catch (error) {\n        console.error(error);\n        alert(\"Theater has Movie running.\");\n      }\n    },\n    async triggerCSVExport(id) {\n      try {\n        let access_token = localStorage.getItem('access_token');\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token;\n        await axios.get(`http://127.0.0.1:8081/api/export_csv/${id}`);\n        alert(\"CSV Fill Sent on Your Email\");\n      } catch (error) {\n        if (error.response && error.response.status === 401) {\n          await refreshAccessToken();\n          await this.triggerCSVExport(id);\n        } else if (error.response) {\n          console.error(error);\n          alert('An error occurred while exporting the theater data.');\n        }\n      }\n    }\n  },\n  components: {\n    'admin-header': AdminHeader\n  }\n};","map":{"version":3,"names":["axios","AdminHeader","refreshAccessToken","data","theaters","show_table","no_table","showModal","theater_id_to_delete","created","allTheaters","methods","showConfirmationModal","id","movie_id_to_delete","deleteItem","access_token","localStorage","getItem","defaults","headers","common","delete","console","log","allMovies","error","alert","cancelDelete","theatersResponse","get","length","response","status","alltheaters","dltTheater","triggerCSVExport","components"],"sources":["src/views/admin/theater/TheaterView.vue"],"sourcesContent":["<template>\n    <div id=\"outer_div\">\n        <admin-header></admin-header>\n        <div class=\"container-fluid text-center\" style=\"margin-bottom: 40px;\">\n            <div class=\"row\">\n                <div class=\"col\"></div>\n                <div class=\"col\" v-show=\"no_table\">\n                    <p style=\"margin-top: 60px; font-style: italic;\">\"No Theater is created\"</p><br><br>\n                </div>\n                <div class=\"col\" v-if=\"show_table\">\n                    <h3 style=\"margin-top: 20px;\">All Theaters</h3>\n                    <table>\n                        <tr>\n                            <th>Theater Id</th>\n                            <th>Theater Name</th>\n                            <th>Theater Place</th>\n                            <th>Theater Loaction</th>\n                            <th>Theater Capacity</th>\n                            <th>Actions</th>\n                            <th>Export CSV</th>\n\n                        </tr>\n                        <tr v-for=\"theater in theaters\" :key=\"theater.theater_id\">\n                            <td>{{ theater.theater_id }}</td>\n                            <td>{{ theater.theater_name }}</td>\n                            <td>{{ theater.theater_place }}</td>\n                            <td>{{ theater.theater_location }}</td>\n                            <td>{{ theater.theater_capacity }}</td>\n                            <td><a id=\"dlt\" @click=\"showConfirmationModal(theater.theater_id)\"><i class=\"bi bi-trash-fill\"\n                                        style=\"color: brown;\"></i></a>/\n                                <router-link :to=\"`/admin/theater/edit/${theater.theater_id}`\"><i\n                                        class=\"bi bi-pencil-square\" style=\"color: grey;\"></i></router-link>\n                            </td>\n                            <td> <button type=\"button\" class=\"btn btn-primary\"\n                                    @click=\"triggerCSVExport(theater.theater_id)\"><i\n                                        class=\"bi bi-cloud-arrow-down\"></i></button> </td>\n                                        <div>\n                                        <ConfirmationModal v-if=\"showModal\" message=\"Are you sure you want to delete?\"\n                                            :onConfirm=\"deleteItem\" :onCancel=\"cancelDelete\" />\n                                    </div>\n                        </tr>\n                    </table>\n                </div>\n                <div class=\"col\"></div>\n            </div>\n        </div>\n        <div class=\"container-fluid text-center\">\n            <div class=\"row\">\n                <div class=\"col-3\"></div>\n                <div class=\"col\">\n                    <div class=\"container text-center\">\n                        <div class=\"row\">\n                            <div class=\"col\">\n                                <h6>To Add New Theater</h6>\n                                <router-link to=\"/admin/add_theater\"><button class=\"add_button\">\n                                        <center>+</center>\n                                    </button></router-link>\n                            </div>\n                            <div class=\"col\"></div>\n                            <div class=\"col\">\n                                <h6>To Add New Movie in Theater</h6>\n                                <router-link to=\"/admin/LinkTheaterMovie\"><button\n                                        class=\"add_button\">+</button></router-link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-3\"> </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n\n\n<script>\n\nimport axios from 'axios';\nimport AdminHeader from '../../../components/AdminHeader'\n\nimport refreshAccessToken from '../../../utils/refreshToken'\n\nexport default {\n    data() {\n        return {\n            theaters: {},\n            show_table: false,\n            no_table: false,\n            showModal: false,\n            theater_id_to_delete: -1,\n        }\n\n    },\n    created() {\n        this.allTheaters()\n    },\n    methods: {\n        showConfirmationModal(id) {\n            this.showModal = true;\n            this.movie_id_to_delete = id;\n        },\n        async deleteItem() {\n            try {\n                let access_token = localStorage.getItem('access_token')\n\n                axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token\n\n                await axios.delete(`http://127.0.0.1:8081/api/movie/${this.theater_id_to_delete}`)\n                console.log(\"Movie with id: \" + this.theater_id_to_delete  + \" deleted\")\n                await this.allMovies()\n            }\n            catch (error) {\n                console.error(error);\n                alert(\"Error while deleteing movie\");\n            }\n            this.showModal = false; // Close the modal\n            this.theater_id_to_delete = -1;\n        },\n        cancelDelete() {\n            this.showModal = false; // Close the modal\n            this.theater_id_to_delete = -1;\n        },\n        async allTheaters() {\n            try {\n                let access_token = localStorage.getItem('access_token')\n\n                axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token\n                const theatersResponse = await axios.get('http://127.0.0.1:8081/api/theater')\n\n                this.theaters = theatersResponse.data\n                if (this.theaters.length > 0) {\n                    console.log(\"Theater data fetched\")\n                    this.no_table = false\n                    this.show_table = true\n                }\n                else {\n                    console.log(\"No theater ceated\")\n                    this.no_table = true\n                    this.show_table = false\n                }\n            }\n            catch (error) {\n                if (error.response && error.response.status === 401) {\n                    await refreshAccessToken()\n                    await this.alltheaters()\n                }\n\n                else if (error.response) {\n                    console.error(error)\n                    alert('An error occurred while fetching the theater data.')\n                }\n            }\n        },\n        async dltTheater(id) {\n            try {\n                let access_token = localStorage.getItem('access_token')\n\n                axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token\n\n                await axios.delete(`http://127.0.0.1:8081/api/theater/${id}`)\n                console.log(\"theater with id: \" + id + \" deleted\")\n                await this.allTheaters()\n            }\n            catch (error) {\n                console.error(error);\n                alert(\"Theater has Movie running.\");\n            }\n\n        },\n        async triggerCSVExport(id) {\n            try {\n                let access_token = localStorage.getItem('access_token')\n\n                axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token\n                await axios.get(`http://127.0.0.1:8081/api/export_csv/${id}`)\n                alert(\"CSV Fill Sent on Your Email\")\n            }\n            catch (error) {\n                if (error.response && error.response.status === 401) {\n                    await refreshAccessToken()\n                    await this.triggerCSVExport(id)\n                }\n                else if (error.response) {\n                    console.error(error)\n                    alert('An error occurred while exporting the theater data.')\n                }\n            }\n        }\n    },\n    components: {\n        'admin-header': AdminHeader\n    }\n}\n</script>\n\n\n<style scoped>\n.col {\n    /* border: 1px solid black; */\n    margin: 0;\n    padding: 0;\n}\n\n.add_button {\n    background-color: rgb(165, 165, 231);\n    border: 0;\n    color: white;\n    width: 50px;\n    height: 50px;\n    font-size: 25px;\n    text-align: center;\n    border-radius: 2rem;\n}\n\n.add_button:hover {\n    background-color: rgb(126, 126, 230);\n}\n\ntable {\n    /* border: 1px solid black; */\n    border-collapse: collapse;\n    text-align: center;\n    border-radius: .5em;\n    margin-top: 10px;\n}\n\nth {\n    background-color: rgb(128, 128, 235);\n    color: white;\n}\n\ntd,\nth {\n    padding-left: 12.5px;\n    padding-right: 12.5px;\n    /* border: 1px solid black; */\n    font-size: 15px;\n}\n\ntd {\n    font-size: 15px;\n}\n\ntr:nth-child(even) {\n    background-color: rgb(207, 231, 243);\n}\n\ntr:nth-child(odd) {\n    background-color: whitesmoke;\n}</style>"],"mappings":"AA6EA,OAAAA,KAAA;AACA,OAAAC,WAAA;AAEA,OAAAC,kBAAA;AAEA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,UAAA;MACAC,QAAA;MACAC,SAAA;MACAC,oBAAA;IACA;EAEA;EACAC,QAAA;IACA,KAAAC,WAAA;EACA;EACAC,OAAA;IACAC,sBAAAC,EAAA;MACA,KAAAN,SAAA;MACA,KAAAO,kBAAA,GAAAD,EAAA;IACA;IACA,MAAAE,WAAA;MACA;QACA,IAAAC,YAAA,GAAAC,YAAA,CAAAC,OAAA;QAEAlB,KAAA,CAAAmB,QAAA,CAAAC,OAAA,CAAAC,MAAA,gCAAAL,YAAA;QAEA,MAAAhB,KAAA,CAAAsB,MAAA,yCAAAd,oBAAA;QACAe,OAAA,CAAAC,GAAA,0BAAAhB,oBAAA;QACA,WAAAiB,SAAA;MACA,EACA,OAAAC,KAAA;QACAH,OAAA,CAAAG,KAAA,CAAAA,KAAA;QACAC,KAAA;MACA;MACA,KAAApB,SAAA;MACA,KAAAC,oBAAA;IACA;IACAoB,aAAA;MACA,KAAArB,SAAA;MACA,KAAAC,oBAAA;IACA;IACA,MAAAE,YAAA;MACA;QACA,IAAAM,YAAA,GAAAC,YAAA,CAAAC,OAAA;QAEAlB,KAAA,CAAAmB,QAAA,CAAAC,OAAA,CAAAC,MAAA,gCAAAL,YAAA;QACA,MAAAa,gBAAA,SAAA7B,KAAA,CAAA8B,GAAA;QAEA,KAAA1B,QAAA,GAAAyB,gBAAA,CAAA1B,IAAA;QACA,SAAAC,QAAA,CAAA2B,MAAA;UACAR,OAAA,CAAAC,GAAA;UACA,KAAAlB,QAAA;UACA,KAAAD,UAAA;QACA,OACA;UACAkB,OAAA,CAAAC,GAAA;UACA,KAAAlB,QAAA;UACA,KAAAD,UAAA;QACA;MACA,EACA,OAAAqB,KAAA;QACA,IAAAA,KAAA,CAAAM,QAAA,IAAAN,KAAA,CAAAM,QAAA,CAAAC,MAAA;UACA,MAAA/B,kBAAA;UACA,WAAAgC,WAAA;QACA,OAEA,IAAAR,KAAA,CAAAM,QAAA;UACAT,OAAA,CAAAG,KAAA,CAAAA,KAAA;UACAC,KAAA;QACA;MACA;IACA;IACA,MAAAQ,WAAAtB,EAAA;MACA;QACA,IAAAG,YAAA,GAAAC,YAAA,CAAAC,OAAA;QAEAlB,KAAA,CAAAmB,QAAA,CAAAC,OAAA,CAAAC,MAAA,gCAAAL,YAAA;QAEA,MAAAhB,KAAA,CAAAsB,MAAA,sCAAAT,EAAA;QACAU,OAAA,CAAAC,GAAA,uBAAAX,EAAA;QACA,WAAAH,WAAA;MACA,EACA,OAAAgB,KAAA;QACAH,OAAA,CAAAG,KAAA,CAAAA,KAAA;QACAC,KAAA;MACA;IAEA;IACA,MAAAS,iBAAAvB,EAAA;MACA;QACA,IAAAG,YAAA,GAAAC,YAAA,CAAAC,OAAA;QAEAlB,KAAA,CAAAmB,QAAA,CAAAC,OAAA,CAAAC,MAAA,gCAAAL,YAAA;QACA,MAAAhB,KAAA,CAAA8B,GAAA,yCAAAjB,EAAA;QACAc,KAAA;MACA,EACA,OAAAD,KAAA;QACA,IAAAA,KAAA,CAAAM,QAAA,IAAAN,KAAA,CAAAM,QAAA,CAAAC,MAAA;UACA,MAAA/B,kBAAA;UACA,WAAAkC,gBAAA,CAAAvB,EAAA;QACA,OACA,IAAAa,KAAA,CAAAM,QAAA;UACAT,OAAA,CAAAG,KAAA,CAAAA,KAAA;UACAC,KAAA;QACA;MACA;IACA;EACA;EACAU,UAAA;IACA,gBAAApC;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}