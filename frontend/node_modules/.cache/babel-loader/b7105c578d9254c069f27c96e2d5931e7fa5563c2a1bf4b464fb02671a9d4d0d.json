{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport refreshAccessToken from '../../../utils/refreshToken';\nimport AdminHeader from '../../../components/AdminHeader';\nexport default {\n  name: 'EditaTheater',\n  data() {\n    return {\n      theater_id: this.$route.params.id,\n      theater: {},\n      theater_name: '',\n      theater_place: '',\n      theater_location: '',\n      theater_capacity: ''\n    };\n  },\n  created() {\n    this.fetchTheater();\n  },\n  methods: {\n    async fetchTheater() {\n      try {\n        let access_token = localStorage.getItem('access_token');\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token;\n        const theaterResponse = await axios.get(`http://127.0.0.1:8081/api/theater/${this.theater_id}`);\n        this.theater = theaterResponse.data;\n        this.theater_name = this.theater.theater_name;\n        this.theater_place = this.theater.theater_place;\n        this.theater_location = this.theater.theater_location;\n        this.theater_capacity = this.theater.theater_capacity;\n      } catch (error) {\n        if (error.response && error.response.status === 401) {\n          await refreshAccessToken();\n          await this.fetchTheater();\n        } else if (error.response) {\n          console.error(error);\n          alert('An error occurred while fetching the movie data.');\n        }\n      }\n    },\n    async editTheater() {\n      if (!this.theater_name || !this.theater_place || !this.theater_location || !this.theater_capacity) {\n        alert(\"All fields are required !!\");\n        return;\n      }\n      try {\n        let access_token = localStorage.getItem('access_token');\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token;\n        await axios.put(`http://127.0.0.1:8081/api/theater/${this.theater_id}`, {\n          movie_name: this.movie_name,\n          movie_tag: this.movie_tag,\n          movie_language: this.movie_language,\n          movie_duration: this.movie_duration,\n          movie_description: this.movie_description\n        });\n        this.$router.push(\"/admin/theater\");\n      } catch (error) {\n        if (error.response && error.response.status === 401) {\n          await refreshAccessToken();\n          await this.addTheater();\n        } else if (error.response && error.response.status === 400 || error.response.status === 422) {\n          this.errors = error.response.data.errors;\n          alert('An error occurred while creating theater.');\n        }\n      }\n    }\n  },\n  components: {\n    'admin-header': AdminHeader\n  }\n};","map":{"version":3,"names":["axios","refreshAccessToken","AdminHeader","name","data","theater_id","$route","params","id","theater","theater_name","theater_place","theater_location","theater_capacity","created","fetchTheater","methods","access_token","localStorage","getItem","defaults","headers","common","theaterResponse","get","error","response","status","console","alert","editTheater","put","movie_name","movie_tag","movie_language","movie_duration","movie_description","$router","push","addTheater","errors","components"],"sources":["src/views/admin/theater/EditTheater.vue"],"sourcesContent":["<template>\n    <div id=\"outer_div\">\n        <admin-header></admin-header>\n        <div class=\"container text-center\">\n            <div class=\"row\">\n                <div class=\"col-4\">\n\n                </div>\n                <div class=\"col\">\n                    <br><br>\n                    <p>To add new Theater<br> Fill this form</p>\n                    <form>\n                        <div class=\"mb-3\">\n                            <input type=\"text\" class=\"form-control\" v-model=\"theater_name\" required\n                                placeholder=\"Theater Name\">\n                        </div>\n                        <div class=\"mb-3\">\n                            <input type=\"text\" class=\"form-control\" v-model=\"theater_place\" required\n                                placeholder=\"Theater place\">\n                        </div>\n                        <div class=\"mb-3\">\n                            <input type=\"text\" class=\"form-control\" v-model=\"theater_location\" required\n                                placeholder=\"Theater Location\">\n                        </div>\n                        <div class=\"mb-3\">\n                            <input type=\"number\" class=\"form-control\" v-model=\"theater_capacity\" required\n                                placeholder=\"Theater Capacity\">\n                        </div>\n                        <div class=\"input-group mb-3\">\n                            <input type=\"file\" class=\"form-control\" id=\"inputGroupFile01\">\n                        </div>\n                        <button type=\"button\" class=\"btn btn-primary\" @click=\"editTheater()\">Add Theater</button>\n                    </form>\n                </div>\n                <div class=\"col-4\">\n\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n    \n    <script>\n    import axios from 'axios'\n    import refreshAccessToken from '../../../utils/refreshToken';\n    \n    import AdminHeader from '../../../components/AdminHeader'\n    \n    \n    export default {\n        name: 'EditaTheater',\n        data(){\n            return {\n                theater_id : this.$route.params.id,\n                theater: {},\n                theater_name: '',\n                theater_place: '',\n                theater_location: '',\n                theater_capacity: '',\n            }\n        },\n        created(){\n            this.fetchTheater()\n        },\n        methods: {\n            async fetchTheater(){\n                try{\n                    let access_token = localStorage.getItem('access_token')\n    \n                    axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token\n    \n                    const theaterResponse = await axios.get(`http://127.0.0.1:8081/api/theater/${this.theater_id}`)\n                    this.theater = theaterResponse.data\n                    this.theater_name = this.theater.theater_name\n                    this.theater_place = this.theater.theater_place\n                    this.theater_location = this.theater.theater_location\n                    this.theater_capacity = this.theater.theater_capacity\n                }\n                catch (error) {\n                    if (error.response && error.response.status === 401) {\n                        await refreshAccessToken()\n                        await this.fetchTheater()\n                    }\n    \n                    else if (error.response) {\n                        console.error(error)\n                        alert('An error occurred while fetching the movie data.')\n                    }\n                }\n            },\n            async editTheater() {\n                if (!this.theater_name || !this.theater_place || !this.theater_location || !this.theater_capacity) {\n                    alert(\"All fields are required !!\");\n                    return;\n                }\n                try {\n                    let access_token = localStorage.getItem('access_token')\n    \n                    axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token\n    \n                    await axios.put(`http://127.0.0.1:8081/api/theater/${this.theater_id}`, {\n                        movie_name: this.movie_name,\n                        movie_tag: this.movie_tag,\n                        movie_language: this.movie_language,\n                        movie_duration: this.movie_duration,\n                        movie_description: this.movie_description,\n                    })\n                    this.$router.push(\"/admin/theater\");\n                }\n                catch (error) {\n                    if (error.response && error.response.status === 401) {\n                        await refreshAccessToken();\n                        await this.addTheater();\n                    }\n    \n                    else if (error.response && error.response.status === 400 || error.response.status === 422) {\n                        this.errors = error.response.data.errors;\n                        alert('An error occurred while creating theater.')\n                    }\n                }\n    \n            }\n        },\n        components: {\n            'admin-header': AdminHeader\n        }\n    }\n    \n    </script>"],"mappings":";AA2CA,OAAAA,KAAA;AACA,OAAAC,kBAAA;AAEA,OAAAC,WAAA;AAGA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,UAAA,OAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA;MACAC,OAAA;MACAC,YAAA;MACAC,aAAA;MACAC,gBAAA;MACAC,gBAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,YAAA;EACA;EACAC,OAAA;IACA,MAAAD,aAAA;MACA;QACA,IAAAE,YAAA,GAAAC,YAAA,CAAAC,OAAA;QAEAnB,KAAA,CAAAoB,QAAA,CAAAC,OAAA,CAAAC,MAAA,gCAAAL,YAAA;QAEA,MAAAM,eAAA,SAAAvB,KAAA,CAAAwB,GAAA,2CAAAnB,UAAA;QACA,KAAAI,OAAA,GAAAc,eAAA,CAAAnB,IAAA;QACA,KAAAM,YAAA,QAAAD,OAAA,CAAAC,YAAA;QACA,KAAAC,aAAA,QAAAF,OAAA,CAAAE,aAAA;QACA,KAAAC,gBAAA,QAAAH,OAAA,CAAAG,gBAAA;QACA,KAAAC,gBAAA,QAAAJ,OAAA,CAAAI,gBAAA;MACA,EACA,OAAAY,KAAA;QACA,IAAAA,KAAA,CAAAC,QAAA,IAAAD,KAAA,CAAAC,QAAA,CAAAC,MAAA;UACA,MAAA1B,kBAAA;UACA,WAAAc,YAAA;QACA,OAEA,IAAAU,KAAA,CAAAC,QAAA;UACAE,OAAA,CAAAH,KAAA,CAAAA,KAAA;UACAI,KAAA;QACA;MACA;IACA;IACA,MAAAC,YAAA;MACA,UAAApB,YAAA,UAAAC,aAAA,UAAAC,gBAAA,UAAAC,gBAAA;QACAgB,KAAA;QACA;MACA;MACA;QACA,IAAAZ,YAAA,GAAAC,YAAA,CAAAC,OAAA;QAEAnB,KAAA,CAAAoB,QAAA,CAAAC,OAAA,CAAAC,MAAA,gCAAAL,YAAA;QAEA,MAAAjB,KAAA,CAAA+B,GAAA,2CAAA1B,UAAA;UACA2B,UAAA,OAAAA,UAAA;UACAC,SAAA,OAAAA,SAAA;UACAC,cAAA,OAAAA,cAAA;UACAC,cAAA,OAAAA,cAAA;UACAC,iBAAA,OAAAA;QACA;QACA,KAAAC,OAAA,CAAAC,IAAA;MACA,EACA,OAAAb,KAAA;QACA,IAAAA,KAAA,CAAAC,QAAA,IAAAD,KAAA,CAAAC,QAAA,CAAAC,MAAA;UACA,MAAA1B,kBAAA;UACA,WAAAsC,UAAA;QACA,OAEA,IAAAd,KAAA,CAAAC,QAAA,IAAAD,KAAA,CAAAC,QAAA,CAAAC,MAAA,YAAAF,KAAA,CAAAC,QAAA,CAAAC,MAAA;UACA,KAAAa,MAAA,GAAAf,KAAA,CAAAC,QAAA,CAAAtB,IAAA,CAAAoC,MAAA;UACAX,KAAA;QACA;MACA;IAEA;EACA;EACAY,UAAA;IACA,gBAAAvC;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}