{"ast":null,"code":"// import axios from 'axios';\n// import AdminHeader from '../../../components/AdminHeader'\n\n// import refreshAccessToken from '../../../utils/refreshToken'\n\nexport default {\n  name: 'theaterMovieTables'\n  //     data() {\n  //         return {\n  //             movies: {},\n  //             show_table: false,\n  //             no_table: false,\n  //             path: \"/../../../../../backend/\"\n  //         }\n  //     },\n  //     created() {\n  //         this.allMovies()\n  //     },\n  //     methods: {\n  //         async allMovies() {\n  //             try {\n  //                 let access_token = localStorage.getItem('access_token')\n\n  //                 axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token\n\n  //                 const moviesResponse = await axios.get('http://127.0.0.1:8081/api/movie')\n  //                 this.movies = moviesResponse.data\n  //                 if (this.movies.length > 0) {\n  //                     console.log(\"Movie data fletch\")\n  //                     this.show_table = true\n  //                 }\n  //                 else {\n  //                     console.log(\"No movie ceated\")\n  //                     this.no_table = true\n  //                 }\n  //             }\n  //             catch (error) {\n  //                 if (error.response && error.response.status === 401) {\n  //                     await refreshAccessToken()\n  //                     await this.allMovies()\n  //                 }\n\n  //                 else if (error.response) {\n  //                     console.error(error)\n  //                     alert('An error occurred while fetching the movie data.')\n  //                 }\n  //             }\n  //         },\n  //         async dltMovie(id){\n  //             try{\n  //                 let access_token = localStorage.getItem('access_token')\n\n  //                 axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token\n\n  //                 await axios.delete(`http://127.0.0.1:8081/api/movie/${id}`)\n  //                 console.log(\"Movie with id: \" + id + \" deleted\")\n  //                 await this.allMovies()\n  //             }\n  //             catch (error){\n  //                 console.error(error);\n  //                 alert(\"An error occurred while deleting movie\");\n  //             }\n  //         }\n  //     },\n  //     components: {\n  //         'admin-header': AdminHeader\n  //     }\n};","map":{"version":3,"names":["name"],"sources":["src/views/admin/theater_movie/TheaterMovieView.vue"],"sourcesContent":["<template>\n    <div id=\"outer_div\">\n        <admin-header></admin-header>\n        <br><br>\n        <div class=\"container-fluid text-center\">\n            <div class=\"row\">\n                <div class=\"col-2\"></div>\n                <div class=\"col\" v-if=\"no_table\">\n                    <p><i>\"No Movie is created\"</i></p><br><br>\n                </div>\n                <div class=\"col\" v-if=\"show_table\">\n                    <center>\n                    \n                    <h5>Movies Booking Running</h5>\n                    <table>\n                        <tr>\n                            <th>Theater Movie Id</th>\n                            <th>Theater Name</th>\n                            <th>Movie Name</th>\n                            <th>Ticket Price</th>\n                            <th>Show Timing</th>\n                            <th>Actions</th>\n                        </tr>\n                        <tr v-for=\"movie in movies\" :key=\"movie.movie_id\">\n                            <td>{{ movie.movie_id}}</td>\n                            <td>{{ movie.movie_name }}</td>\n                            <td>{{ movie.movie_tag }}</td>\n                            <td>{{ movie.movie_language }}</td>\n                            <td>{{ movie.movie_duration }}</td>\n                            <td>{{ movie.movie_description.slice(0,15) }} ...</td>\n                            <td><p>{{ movie.movie_image_path }}</p></td>\n                            <!-- <td><img src=\"../../../../../backend/static/img/movies/ant-man-and-the-wasp-quantumania.avif\"></td> -->\n                            <!-- <td><img src=\"../../../assets/ant-man-and-the-wasp-quantumania.avif\"></td> -->\n                            <!-- <td><a :href=movie.movie_image_path>view</a></td> -->\n                            <!-- <td><img :src=\"movie.movie_image_path\"></td> -->\n                            <td><a  @click=\"dltMovie(movie.movie_id)\"><i class=\"bi bi-trash-fill\" style=\"color: brown;\"></i></a>/\n                                <router-link  :to=\"`/admin/movie/edit/${movie.movie_id}`\"><i class=\"bi bi-pencil-square\" style=\"color: grey;\"></i></router-link></td>\n                        </tr>\n                    </table>\n                    </center>\n                </div>\n                <div class=\"col-2\"></div>\n            </div>\n        </div><br><br>\n            </div>\n</template>\n\n\n\n<script>\n\n// import axios from 'axios';\n// import AdminHeader from '../../../components/AdminHeader'\n\n// import refreshAccessToken from '../../../utils/refreshToken'\n\nexport default {\n    name: 'theaterMovieTables'\n//     data() {\n//         return {\n//             movies: {},\n//             show_table: false,\n//             no_table: false,\n//             path: \"/../../../../../backend/\"\n//         }\n//     },\n//     created() {\n//         this.allMovies()\n//     },\n//     methods: {\n//         async allMovies() {\n//             try {\n//                 let access_token = localStorage.getItem('access_token')\n\n//                 axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token\n\n//                 const moviesResponse = await axios.get('http://127.0.0.1:8081/api/movie')\n//                 this.movies = moviesResponse.data\n//                 if (this.movies.length > 0) {\n//                     console.log(\"Movie data fletch\")\n//                     this.show_table = true\n//                 }\n//                 else {\n//                     console.log(\"No movie ceated\")\n//                     this.no_table = true\n//                 }\n//             }\n//             catch (error) {\n//                 if (error.response && error.response.status === 401) {\n//                     await refreshAccessToken()\n//                     await this.allMovies()\n//                 }\n\n//                 else if (error.response) {\n//                     console.error(error)\n//                     alert('An error occurred while fetching the movie data.')\n//                 }\n//             }\n//         },\n//         async dltMovie(id){\n//             try{\n//                 let access_token = localStorage.getItem('access_token')\n\n//                 axios.defaults.headers.common['Authorization'] = 'Bearer ' + access_token\n            \n//                 await axios.delete(`http://127.0.0.1:8081/api/movie/${id}`)\n//                 console.log(\"Movie with id: \" + id + \" deleted\")\n//                 await this.allMovies()\n//             }\n//             catch (error){\n//                 console.error(error);\n//                 alert(\"An error occurred while deleting movie\");\n//             }\n//         }\n//     },\n//     components: {\n//         'admin-header': AdminHeader\n//     }\n}\n</script>\n\n\n<style scoped>\n.col {\n    /* border: 1px solid black; */\n    margin: 0;\n    padding: 0;\n}\n\nbutton{\n    background-color: rgb(165, 165, 231);\n    border: 0;\n    color: white;\n    width: 50px;\n    height: 50px;\n    font-size: 25px;\n    text-align: center;\n    border-radius: 2rem;\n}\nbutton:hover{\n    background-color: rgb(126, 126, 230);\n}\ntable {\n    border: 1px solid black;\n    border-collapse: collapse;\n    text-align: center;\n    border-radius: .5em;\n    margin-top: 10px;\n}\n\nth {\n    background-color: rgb(128, 128, 235);\n    color: white;\n}\n\ntd,\nth {\n    padding-left: 12.5px;\n    padding-right: 12.5px;\n    /* border: 1px solid black; */\n    font-size: small;\n}\n\ntd {\n    font-size: 15px;\n}\n\ntr:nth-child(even) {\n    background-color: rgb(207, 231, 243);\n}\n\ntr:nth-child(odd) {\n    background-color: whitesmoke;\n}\n</style>"],"mappings":"AAmDA;AACA;;AAEA;;AAEA;EACAA,IAAA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}